plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'jacoco'
}

group = 'com.soo'
version = '0.1'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

def springBootVersion = "2.6.6"
def httpclientVersion = "4.5.13"
def apacheCommonsLang3Version = "3.12.0"
def apacheCommonsCollections4Version = "4.4"
def guavaVersion = "31.1-jre"
def mapStructVersion = "1.5.3.Final"
def lombokVersion = "1.18.22"
def lombokMapStructBindingVersion = "0.2.0"
def springDocVersion = "1.6.15"
def slf4jVersion = "1.7.35"

repositories {
    mavenCentral()
}

dependencies {

    // spring
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-validation:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")

    // h2
    runtimeOnly("com.h2database:h2")

    // apache http
    implementation("org.apache.httpcomponents:httpclient:${httpclientVersion}")

    // apache commons
    implementation("org.apache.commons:commons-lang3:${apacheCommonsLang3Version}")
    implementation("org.apache.commons:commons-collections4:${apacheCommonsCollections4Version}")

    // guava
    implementation("com.google.guava:guava:${guavaVersion}")

    // mapstruct
    implementation("org.mapstruct:mapstruct:${mapStructVersion}")
    annotationProcessor("org.mapstruct:mapstruct-processor:${mapStructVersion}")

    // lombok
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok-mapstruct-binding:${lombokMapStructBindingVersion}")

    // spring doc
    implementation("org.springdoc:springdoc-openapi-ui:${springDocVersion}")

    // log
    implementation("org.slf4j:slf4j-api:${slf4jVersion}")

    // test
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude module: "junit"
        exclude module: "junit-vintage-engine"
    }

    testImplementation("com.h2database:h2")
    testImplementation('com.github.database-rider:rider-junit5:1.36.0')
    testImplementation('org.mockito:mockito-inline:4.3.1')
}

test {
    useJUnitPlatform()
}